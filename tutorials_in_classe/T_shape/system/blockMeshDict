/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.1;

vertices
(
    (0 0 0)
    (1 0 0)
    (1 1 0)
    (0 1 0)
    (0 0 0.1)
    (1 0 0.1)
    (1 1 0.1)
    (0 1 0.1)
    (2 0 0)
    (2 1 0)
    (2 0 0.1)
    (2 1 0.1)
    (-1 0 0)
    (-1 1 0)
    (-1 0 0.1)
    (-1 1 0.1)
    (0 -1 0)
    (1 -1 0)
    (1 -1 0.1)
    (0 -1 0.1)
);
blocks
(
    hex (0 1 2 3 4 5 6 7) (20 20 1) simpleGrading (1 1 1)
        hex (1 8 9 2 5 10 11 6) (20 20 1) simpleGrading (1 1 1)
        hex (16 17 1 0 19 18 5 4) (20 20 1) simpleGrading (1 1 1)
        hex (12 0 3 13 14 4 7 15) (20 20 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (12 14 15 13)
        );
    }
        outlet
    {
        type patch;
        faces
        (
            (8 10 11 9)
        );
    }
    walls
    {
        type wall;
        faces
        (
            (12 0 4 14)
            (16 19 4 0)
            (16 17 18 19)
            (17 18 5 1)
            (1 8 10 5)
            (13 3 7 15)
            (3 2 6 7)
            (2 9 11 6)
        );
    }
    frontAndBack
    {
         type empty;
         faces
         (
             (12 0 3 13)
             (0 1 2 3)
             (1 8 9 2)
             (16 17 1 0)
             (14 4 7 15)
             (4 5 6 7)
             (5 10 11 6)
             (19 18 5 4)
         );
    }
    // }
    // movingWall
    // {
    //     type wall;
    //     faces
    //     (
    //         (3 7 6 2)
    //     );
    // }
    // fixedWalls
    // {
    //     type wall;
    //     faces
    //     (
    //         (0 4 7 3)
    //         (2 6 5 1)
    //         (1 5 4 0)
    //     );
    // }
    // frontAndBack
    // {
    //     type empty;
    //     faces
    //     (
    //         (0 3 2 1)
    //         (4 5 6 7)
    //     );
    // }
);


// ************************************************************************* //
